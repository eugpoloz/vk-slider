{"version":3,"sources":["helpers/index.tsx","components/Slider/Slider.tsx","components/Slider/index.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["percentToValue","percent","sliderWidth","min","max","step","res","number","precision","factor","Math","pow","round","precisionRound","split","length","Slider","onChange","props","sliderRef","React","useRef","useState","updateSliderWidth","sliderOffsetX","updateSliderOffsetX","updateSliderDimensions","sliderDimensions","current","getBoundingClientRect","width","x","useEffect","window","addEventListener","removeEventListener","initialValue","value","defaultValue","determineInitialValue","initialPercent","valueToPercent","setValue","setPercent","active","toggleActive","updateSliderPosition","useCallback","$event","clientX","$touchEvent","$mouseEvent","touches","getClientXFromEvent","helperProps","percentPosition","position","getPercentFromAbsolutePosition","validPosition","absStep","validateAbsolutePosition","validatePercent","preventDefaultAndStopPropagation","changedTouches","preventDefault","stopPropagation","onDragMove","onDragStart","document","onDragEnd","setTimeout","ref","className","disabled","onMouseDown","undefined","onTouchStart","style","type","tabIndex","role","aria-labelledby","ariaLabelledBy","aria-orientation","aria-valuemax","aria-valuemin","aria-valuenow","left","App","controlledValue","updateControlledValue","uncontrolledValue","updateUncontrolledValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3234909a.chunk.js","sourcesContent":["export const getClientXFromEvent = ($event: React.TouchEvent<HTMLElement> | React.MouseEvent<HTMLElement>) => {\n    let $touchEvent = ($event as React.TouchEvent<HTMLElement>);\n    let $mouseEvent = ($event as React.MouseEvent<HTMLElement>);\n\n    if ($touchEvent?.touches?.[0]?.clientX) {\n        return $touchEvent.touches[0].clientX;\n    }\n\n    if ($mouseEvent?.clientX) {\n        return $mouseEvent.clientX;\n    }\n\n    return undefined;\n}\n\nexport type SliderHelperProps = {\n    min: number,\n    max: number,\n    step: number,\n    sliderWidth: number\n}\nexport function validateAbsolutePosition(position: number, { sliderWidth, min, max, step }: SliderHelperProps) {\n    let validPosition = Math.max(0, Math.min(position, sliderWidth));\n\n    if (step > 0) {\n        const stepCount = (max - min) / step;\n        const absStep = sliderWidth / stepCount;\n\n        validPosition = Math.round(validPosition / absStep) * absStep;\n    }\n\n    return validPosition;\n}\n\nexport function validatePercent(percent: number): number {\n    return Math.max(0, Math.min(percent, 100));\n}\n\nexport function getPercentFromAbsolutePosition(position: number, sliderWidth: number) {\n    return position * 100 / sliderWidth;\n}\n\nexport function precisionRound(number: number, precision: number) {\n    let factor = Math.pow(10, precision || 1);\n    return Math.round(number * factor) / factor;\n}\n\nexport function percentToValue(percent: number, { sliderWidth, min, max, step }: SliderHelperProps) {\n    const res = percent * (max - min) / 100 + min;\n\n    if (step > 0) {\n        const stepFloatPart = `${step}`.split('.')[1] || '';\n        return precisionRound(res, stepFloatPart.length);\n    }\n\n    return res;\n}\n\ntype ValueToPercentProps = { min: number, max: number };\nexport function valueToPercent(value: number, { min, max }: ValueToPercentProps) {\n    return (value - min) * 100 / (max - min);\n}","import React from \"react\";\nimport { getClientXFromEvent, getPercentFromAbsolutePosition, valueToPercent, validateAbsolutePosition, validatePercent, percentToValue } from \"../../helpers\";\nimport \"./Slider.css\";\n\ntype SliderDragEvent = React.TouchEvent<HTMLElement> | React.MouseEvent<HTMLElement>;\n\ntype SliderProps = {\n    min: number,\n    max: number,\n    step: number,\n    value?: number,\n    defaultValue?: number,\n    onChange?: Function,\n    disabled?: boolean,\n    ariaLabelledBy?: string\n};\n\n// Slider function component\nfunction Slider({ min = 0, max = 100, step = 1, onChange, ...props }: SliderProps) {\n    // get slider ref\n    const sliderRef = React.useRef<HTMLDivElement>(null);\n\n    // measure slider\n    const [sliderWidth, updateSliderWidth] = React.useState(0);\n    const [sliderOffsetX, updateSliderOffsetX] = React.useState(0);\n\n    const updateSliderDimensions = () => {\n        let sliderDimensions = sliderRef?.current?.getBoundingClientRect();\n\n        if (sliderDimensions) {\n            updateSliderWidth(sliderDimensions.width);\n            updateSliderOffsetX(sliderDimensions.x);\n        }\n    };\n\n    React.useEffect(() => {\n        updateSliderDimensions();\n\n        // todo: debounce\n        window.addEventListener('resize', updateSliderDimensions);\n\n        return () => {\n            window.removeEventListener('resize', updateSliderDimensions);\n        }\n    }, []);\n\n    // set values and percentages\n    const determineInitialValue = () => {\n        let initialValue = 0;\n\n        if (props.value) {\n            initialValue = props.value;\n        } else if (props.defaultValue) {\n            initialValue = props.defaultValue;\n        }\n\n        return initialValue;\n    }\n    const initialValue = determineInitialValue();\n    const initialPercent = valueToPercent(initialValue, { min, max });\n\n    const [value, setValue] = React.useState(initialValue);\n    const [percent, setPercent] = React.useState(initialPercent);\n    const [active, toggleActive] = React.useState(false);\n\n    // handle onChange event on value changes\n    React.useEffect(() => {\n        if (!!onChange) {\n            onChange(value);\n        }\n    }, [value, onChange]);\n\n    // get and update slider position\n    const updateSliderPosition = React.useCallback(($event: SliderDragEvent) => {\n        const clientX = getClientXFromEvent($event);\n\n        if (clientX != null) {\n            let helperProps = {\n                sliderWidth, min, max, step\n            };\n\n            const absolutePosition = clientX - sliderOffsetX;\n            const validAbsolutePosition = validateAbsolutePosition(absolutePosition, helperProps);\n            const percentPosition = getPercentFromAbsolutePosition(validAbsolutePosition, sliderWidth);\n\n            setPercent(validatePercent(percentPosition));\n            setValue(percentToValue(percentPosition, helperProps));\n        }\n    }, [max, min, sliderOffsetX, sliderWidth, step]);\n\n    const preventDefaultAndStopPropagation = React.useCallback(($event: any) => {\n        if (($event as React.TouchEvent<HTMLElement>).changedTouches?.length > 1) {\n            $event.preventDefault();\n        }\n\n        $event.stopPropagation();\n    }, []);\n\n    // drag move\n    const onDragMove = React.useCallback(($event) => {\n        preventDefaultAndStopPropagation($event);\n        updateSliderPosition($event);\n    }, [updateSliderPosition, preventDefaultAndStopPropagation]);\n\n    const onDragStart = ($event: SliderDragEvent) => {\n        preventDefaultAndStopPropagation($event);\n\n        toggleActive(true);\n        updateSliderPosition($event);\n\n        document.addEventListener('mousemove', onDragMove, false);\n        document.addEventListener('touchmove', onDragMove, false);\n\n        document.addEventListener('mouseup', onDragEnd, false);\n        document.addEventListener('touchend', onDragEnd, false);\n    }\n\n    // drag end\n    const onDragEnd = React.useCallback(($event) => {\n        preventDefaultAndStopPropagation($event);\n        updateSliderPosition($event);\n        toggleActive(false);\n\n        document.removeEventListener('mousemove', onDragMove, false);\n        document.removeEventListener('touchmove', onDragMove, false);\n\n        setTimeout(() => {\n            document.removeEventListener('mouseup', onDragEnd, false);\n            document.removeEventListener('touchend', onDragEnd, false);\n        }, 0)\n    }, [updateSliderPosition, onDragMove, preventDefaultAndStopPropagation]);\n\n    return (\n        <div\n            ref={sliderRef}\n            className={props?.disabled ? \"slider disabled\" : \"slider\"}\n            onMouseDown={!props?.disabled ? onDragStart : undefined}\n            onTouchStart={!props?.disabled ? onDragStart : undefined}>\n            <span className=\"slider__rail\" />\n            <span\n                className=\"slider__track\"\n                style={{\n                    width: percent + '%'\n                }}\n            />\n            <input\n                type=\"hidden\"\n                disabled={props?.disabled}\n                value={value}\n            />\n            <span\n                tabIndex={props?.disabled ? undefined : 0}\n                role=\"slider\"\n                aria-labelledby={props?.ariaLabelledBy}\n                aria-orientation=\"horizontal\"\n                aria-valuemax={max}\n                aria-valuemin={min}\n                aria-valuenow={value}\n                style={{\n                    left: percent + '%'\n                }}\n                className={active ? 'slider__knob active' : 'slider__knob'}\n            />\n        </div>\n    );\n}\n\nexport default Slider;\n","import Slider from './Slider';\n\nexport default Slider;","import React from \"react\";\nimport Slider from './components/Slider';\nimport \"./App.css\";\n\nfunction App() {\n  let [controlledValue, updateControlledValue] = React.useState(20);\n  let [uncontrolledValue, updateUncontrolledValue] = React.useState(50);\n\n  let disabledValue: number = 50;\n\n  return (\n    <article className=\"vk-slider-demo\">\n      <section className=\"vk-slider-demo__section\">\n        <h2>Контролируемый слайдер</h2>\n\n        <div className=\"vk-slider-demo__information\">\n          <p>5-25, шаг 5</p>\n          <p>Значение: <strong>{controlledValue}</strong></p>\n        </div>\n\n        <Slider\n          min={5}\n          max={25}\n          step={5}\n          value={controlledValue}\n          onChange={updateControlledValue}\n          ariaLabelledBy=\"Контролируемый слайдер\"\n        />\n      </section>\n\n      <hr />\n\n      <section className=\"vk-slider-demo__section\">\n        <h2>Неконтролируемый слайдер</h2>\n\n        <div className=\"vk-slider-demo__information\">\n          <p>0-100, шаг 1</p>\n          <p>Значение: <strong>{uncontrolledValue}</strong></p>\n        </div>\n\n        <Slider\n          min={0}\n          max={100}\n          step={1}\n          defaultValue={uncontrolledValue}\n          onChange={updateUncontrolledValue}\n          ariaLabelledBy=\"Неконтролируемый слайдер\"\n        />\n      </section>\n\n      <hr />\n\n      <section className=\"vk-slider-demo__section\">\n        <h2>Выключенный слайдер</h2>\n\n        <div className=\"vk-slider-demo__information\">\n          <p>0-100, шаг 1</p>\n          <p>Значение: <strong>{disabledValue}</strong></p>\n        </div>\n\n        <Slider\n          min={0}\n          max={100}\n          step={1}\n          defaultValue={disabledValue}\n          disabled\n          ariaLabelledBy=\"Выключенный слайдер\"\n        />\n      </section>\n    </article>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}